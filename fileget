#!/usr/bin/env python3

import argparse
import socket
import logging as log
import re
import pathlib as path
from urllib.parse import urlparse


def parseAddress(addr):
    log.info("Parsing address " + addr)
    addr = addr.split(':')
    return (addr[0], int(addr[1]))


def getAddress(addr, file_server):
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as s:
            msg = "WHEREIS {}".format(file_server.netloc).encode()

            log.info("Connecting to server " + addr.path)

            s.connect(parseAddress(addr.path))

            log.info("Sending request to server " + str(addr.path))
            s.send(msg)

            log.info("Receiving data from server " + str(addr.path))
            data = s.recv(1024).decode()
            # todo: space not required
            data = data.split(" ")
            if data[0] != 'OK':
                log.error("Response from server " +
                          str(addr.path) + " not OK")
                exit(1)
            log.info("Response OK")
            s.close()
            return urlparse(data[1])
    except:
        log.error("Something went wrong")
        exit(1)


def getFile(addr, surl):
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:

            log.info("Connecting to server " + addr.path)
            s.connect(parseAddress(addr.path))
            mesg = "GET {file} FSP/1.0\r\nHostname: {fileserver}\r\nAgent: xgysel00\r\n\r\n".format(
                file=surl.path, fileserver=surl.netloc)

            log.info("Sending request to server " + addr.path)
            s.send(mesg.encode())

            file = ""
            while True:
                log.info("Receiving data from server " + addr.path)
                data = s.recv(1024).decode()
                if len(data) == 0:
                    break
                file += data
            s.close()
            # print(file, end='\n\n', )
            return file
    except:
        log.error("Something went wrong")
        exit(1)


def copyFile(filename, file):
    regex = r"^FSP\/1\.0 Success\r\nLength:\d+(\r\n){1,2}"

    head = re.search(regex, file)
    # print(head)
    if head == None:
        log.error("Something went wrong")
        exit(1)
    file = re.sub(regex, "", file)

    lenght = int(head.group().split('\r\n')[1].split(':')[-1])
    if lenght != len(file):
        log.error("Something went wrong downloading file")
        exit(1)

    try:
        # print(filename)
        filepath = filename.split('/')
        filename = filepath[-1]
        filepath = "/".join(filepath[1:-1])
        # print(filepath)

        path.Path(filepath).mkdir(parents=True, exist_ok=True)
        data_folder = path.Path(filepath)

        log.info("Opening file " + filename + " in directory " + filepath)
        f = open(data_folder / filename, "wt")
        f.write(file)
        f.close

    except:
        log.error("Something went wrong writing to file")
        exit(1)
    log.info("Copying finished")


def main():

    log.basicConfig(level=log.INFO)

    # parse program arguments
    ap = argparse.ArgumentParser("Fileget")
    ap.add_argument("-n", required=True)
    ap.add_argument("-f", required=True)

    log.info("Parsing program arguments")
    args = ap.parse_args()

    # get nameserver address
    nameserver = getAddress(
        addr=urlparse(args.n),
        file_server=urlparse(args.f)
    )

    # get file content
    surl = urlparse(args.f)
    file = getFile(addr=nameserver, surl=surl)
    copyFile(surl.path, file)


if __name__ == "__main__":
    main()
